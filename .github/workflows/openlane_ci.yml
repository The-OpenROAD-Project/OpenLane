name: CI

on: push

jobs:
  docker-build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: ${{ github.event.workflow_run.event != 'pull_request' || github.event.pull_request.head.repo.full_name == 'efabless/openlane' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Export Branch Name To Environment
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Export Image Name To Environment
        run: echo "IMAGE_NAME=efabless/openlane:${{ env.BRANCH_NAME }}" >> $GITHUB_ENV

      - name: Export RUN Root To Environment
        run: echo "RUN_ROOT=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Export Event Type
        run: echo "ACTION_EVENT_TYPE=${{ github.event_name }}" >> $GITHUB_ENV

      - name: Export TOOL Name
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-tool-') }}
        run: echo "TOOL=$(echo "$BRANCH_NAME" | sed 's/CID-latest-tools-//g')" >> $GITHUB_ENV

      - name: Update PDK
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-pdk') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updatePDK.sh

      - name: Update TOOL
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-tool-') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updateTool.sh

      - name: Reset Branch
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/resetBranch.sh

      - name: Update PDK
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-pdk') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updatePDK.sh

      - name: Update & Build TOOL
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-tool-') }}
        run: |
         cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updateTool.sh
         cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/buildTool.sh

      - name: Docker Build
        run: cd docker_build/ && make merge

      - name: Docker Push
        if: ${{ github.event.workflow_run.event != 'pull_request' || github.event.pull_request.head.repo.full_name == 'efabless/openlane' }}
        run: docker push ${{ env.IMAGE_NAME }}

  test:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Export Branch Name To Environment
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Export Image Name To Environment
        run: echo "IMAGE_NAME=efabless/openlane:${{ env.BRANCH_NAME }}" >> $GITHUB_ENV

      - name: Export PDK Root To Environment
        run: echo "PDK_ROOT=${{ github.workspace }}/pdks" >> $GITHUB_ENV

      - name: Export RUN Root To Environment
        run: echo "RUN_ROOT=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Export Event Type
        run: echo "ACTION_EVENT_TYPE=${{ github.event_name }}" >> $GITHUB_ENV

      - name: Export TOOL Name
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-tool-') }}
        run: echo "TOOL=$(echo "$BRANCH_NAME" | sed 's/CID-latest-tools-//g')" >> $GITHUB_ENV

      - name: Reset Branch
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/resetBranch.sh

      - name: Update PDK
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-pdk') }}
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updatePDK.sh

      - name: Update & Build TOOL
        if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'CID-latest-tool-') }}
        run: |
         cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/updateTool.sh
         cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/buildTool.sh

      - name: Docker Pull
        run: cd ${GITHUB_WORKSPACE}/ && make openlane

      - name: PDK installation
        run: cd ${GITHUB_WORKSPACE}/ && make pdk

      - name: SPM Test
        run: cd ${GITHUB_WORKSPACE}/ && make test

      - name: Fastest Test Set
        env:
          EXTRA_FLAGS: -so
          TEST_SET: fastestTestSet
        run: cd ${GITHUB_WORKSPACE}/ && bash ${GITHUB_WORKSPACE}/.github/scripts/test.sh

